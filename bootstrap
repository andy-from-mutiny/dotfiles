#!/usr/bin/env bash -i
set -e

declare -a PKG_LIST
PKG_LIST=(coreutils gpg2 asdf ripgrep)

info() { printf "\r[ \033[00;34m..\033[0m ] $1\n"; }
user() { printf "\r[ \033[0;33m??\033[0m ] $1"; }
success() { printf "\r\033[2K[ \033[00;32mOK\033[0m ] $1\n"; }
fail() { printf "\r\033[2K[\033[0;31mFAIL\033[0m] $1\n" >&2; }
okee() { success "DONE\r\n"; }

# Symlinks dotfiles in the ETC directory to the user home dir
# Globals:
#   None
# Arguments:
#   executable path
install_dotfiles() {
  info "Installing dotfiles"
  local etc_dir="$(realpath $(dirname -- $0)/etc)"
  for dotfile in $(find "${etc_dir}" -type f); do
    local install_path="${HOME}/.$(basename $dotfile)"
    info "Installing $(basename $dotfile) "
    if ! [[ -h "${install_path}" || -e "${install_path}" ]]; then
      ln -s "${dotfile}" "${install_path}"
    elif ! [[ -h "${install_path}" ]]; then
      user "Replace ${install_path}? (Y/n): "
      read proceed
      if [[ "${proceed}" == [yY] ]]; then
        mv "${install_path}" "${install_path}.bak"
        echo -e "\tCreated a backup of ${install_path} -> ${install_path}.bak"
        ln -s "${dotfile}" "${install_path}"
      else
        echo -e "\tSkipped $(basename $dotfile)"
      fi
    else
      echo -e "\tAlready installed!"
    fi
  done
  okee
}

# Globals:
#   PKG_LIST
# Arguments:
#   None
install_share() {
  info "Installing homebrew"
  which brew > /dev/null
  if (( $? != 0 )); then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    if (( $? != 0 )); then
      fail "Unable to install Homebrew"
      exit 1;
    fi
  fi
  brew doctor > /dev/null
  brew update --force > /dev/null
  brew install --quiet "${PKG_LIST}" > /dev/null
}

main() {
  install_dotfiles "$@"
  install_share
}

main "$@"

